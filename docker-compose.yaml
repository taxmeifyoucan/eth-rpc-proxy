version: '3'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx_conf/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx_conf/dshackle.example.com_location:/etc/nginx/vhost.d/dshackle.example.com_location
      - certs:/etc/nginx/certs
      - vhosts:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    networks:
      - proxy_net

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.12
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhosts:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    depends_on:
      - nginx-proxy

  dshackle:
    container_name: dshackle
    image: emeraldpay/dshackle:0.12
    restart: unless-stopped
    volumes:
      - ./dshackle_conf:/etc/dshackle
    expose:
      - "8080"
    environment:
      - VIRTUAL_HOST=dshackle.example.com
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=dshackle.example.com
      - LETSENCRYPT_EMAIL=dshackle.example.com
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
    networks:
      - proxy_net
      - back_net

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    networks:
      - back_net

  metrics:
    container_name: pusher
    image: debian
    build:
      context: ./metrics
      dockerfile: ./Dockerfile
    env_file:
      - ./metrics/.env
    networks:
      - back_net
    depends_on:
      - dshackle

networks:
  proxy_net:
    driver: bridge
  back_net:
    driver: bridge    

volumes:
  certs:
  vhosts:
  html:

